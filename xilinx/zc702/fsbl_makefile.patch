diff --git a/lib/sw_apps/zynq_fsbl/src/Makefile b/lib/sw_apps/zynq_fsbl/src/Makefile
index afc6b80a83..9e0317a931 100644
--- a/lib/sw_apps/zynq_fsbl/src/Makefile
+++ b/lib/sw_apps/zynq_fsbl/src/Makefile
@@ -5,10 +5,10 @@
 
 
 CC := arm-none-eabi-gcc
-CC_FLAGS :=  
-CFLAGS := 
-ECFLAGS := 
-LDFLAGS := 
+CC_FLAGS :=
+CFLAGS :=
+ECFLAGS :=
+LDFLAGS :=
 
 BOARD	:= zc702
 BSP_DIR	:= ../misc
@@ -24,60 +24,49 @@ OBJS += $(patsubst %.S, %.o, $(S_SOURCES))
 OBJS += $(patsubst %.s, %.o, $(s_SOURCES))
 LSCRIPT := -Tlscript.ld
 
-LIBS := libxil.a 
+LIBS := libxil.a
 EXEC := fsbl.elf
 
 INCLUDEPATH := -I$(BSP_DIR)/ps7_cortexa9_0/include -I. -I$(BSP_DIR)/$(BOARD)
 LIBPATH := $(BSP_DIR)/ps7_cortexa9_0/lib
 
 
-ifeq "$(CC)" "arm-none-eabi-gcc"
+# ifeq "$(CC)" "arm-none-eabi-gcc"
 AS=arm-none-eabi-gcc
 CFLAGS=-Wall -O0 -g3 -c -fmessage-length=0
 LINKER=arm-none-eabi-gcc
 LDFLAGS = -Wl,--start-group,-lxil,-lgcc,-lc,--end-group -Wl,--start-group,-lxilffs,-lxil,-lgcc,-lc,--end-group -Wl,--start-group,-lrsa,-lxil,-lgcc,-lc,--end-group
 LD1FLAGS = -mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard -Wl,-build-id=none -Wl,-T -Wl,lscript.ld -L$(LIBPATH) -specs=../misc/Xilinx.spec
 ECFLAGS = -mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard
-endif 
-ifeq "$(CC)" "armcc"
-AS=armasm
-LINKER=armlink 
-CFLAGS += -c --c99 --wchar32
-CC_FLAGS	+= --cpu=Cortex-A9 --fpu=VFPv3_FP16
-LDFLAGS = --entry=_vector_table "$(LIBPATH)/libxil.a(*.o)" --no_search_dynamic_libraries --userlibpath=$(LIBPATH),. --library=xil,xilffs,rsa
-LSCRIPT = --scatter="scatter.scat"
-endif
+# endif
+# ifeq "$(CC)" "armcc"
+# AS=armasm
+# LINKER=armlink
+# CFLAGS += -c --c99 --wchar32
+# CC_FLAGS	+= --cpu=Cortex-A9 --fpu=VFPv3_FP16
+# LDFLAGS = --entry=_vector_table "$(LIBPATH)/libxil.a(*.o)" --no_search_dynamic_libraries --userlibpath=$(LIBPATH),. --library=xil,xilffs,rsa
+# LSCRIPT = --scatter="scatter.scat"
+# endif
 
 all: $(EXEC)
 
 $(EXEC): $(LIBS) $(OBJS) $(INCLUDES)
 	$(LINKER) $(LD1FLAGS)  -o $@ $(OBJS) $(LDFLAGS)
 	rm -rf $(OBJS)
-	
-	
-$(LIBS): 
+
+
+$(LIBS):
 	echo "Copying BSP files"
 	$(BSP_DIR)/copy_bsp.sh $(BOARD) $(CC)
 	echo "Compiling bsp"
-	if [ $(CC) == "arm-none-eabi-gcc" ]; then \
-		make -C $(BSP_DIR) -k all "CC=arm-none-eabi-gcc" "AR=arm-none-eabi-ar" "C_FLAGS=-O2 -c" "EC_FLAGS=-g"; \
-	elif [ $(CC) == "armcc" ]; then \
-        make -C $(BSP_DIR) -k all "CC=armcc" "AR=armar" "C_FLAGS= -O2 -c" "EC_FLAGS=--debug --wchar32"; \
-	fi;
+	make -C $(BSP_DIR) -k all "CC=arm-none-eabi-gcc" "AR=arm-none-eabi-ar" "C_FLAGS=-O2 -c" "EC_FLAGS=-g"; \
 
 %.o:%.c
 	$(CC) $(CC_FLAGS) $(CFLAGS) $(ECFLAGS) -c $< -o $@ $(INCLUDEPATH)
 
 %.o:%.S
-	if [ $(CC) == "arm-none-eabi-gcc" ]; then \
-		$(AS) $(CC_FLAGS) $(CFLAGS) $(ECFLAGS) -c $< -o $@ $(INCLUDEPATH); \
-	elif [ $(CC) == "armcc" ]; then \
-        $(CC) $(INCLUDEPATH) -E -o fsbl_handoff.s fsbl_handoff.S; \
-		$(AS) $(CC_FLAGS) -c fsbl_handoff.s -o fsbl_handoff.o $(INCLUDEPATH); \
-		rm fsbl_handoff.s; \
-	fi;
-	
-	
+	$(AS) $(CC_FLAGS) $(CFLAGS) $(ECFLAGS) -c $< -o $@ $(INCLUDEPATH); \
+
 %.o:%.s
 	$(AS) $(CC_FLAGS) $(CFLAGS) $(ECFLAGS) -c $< -o $@ $(INCLUDEPATH)
 
